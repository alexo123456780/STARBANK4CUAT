// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STARBANKR.Data;

#nullable disable

namespace STARBANKR.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240922011627_ActualizacionEstructuraBD")]
    partial class ActualizacionEstructuraBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("STARBANKR.Models.Comprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("contenido");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_generacion");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int")
                        .HasColumnName("transaccion_id");

                    b.HasKey("Id");

                    b.HasIndex("TransaccionId");

                    b.ToTable("comprobante", (string)null);
                });

            modelBuilder.Entity("STARBANKR.Models.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("FechaCorte")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_corte");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_pago");

                    b.Property<int>("IntentosFallidos")
                        .HasColumnType("int")
                        .HasColumnName("intentosFallidos");

                    b.Property<double?>("LimiteCredito")
                        .HasColumnType("double")
                        .HasColumnName("limite_credito");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombreUsuario");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numeroTarjeta");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pin");

                    b.Property<double>("Saldo")
                        .HasColumnType("double")
                        .HasColumnName("saldo");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("int")
                        .HasColumnName("tipo_cuenta");

                    b.HasKey("Id");

                    b.ToTable("cuenta", (string)null);
                });

            modelBuilder.Entity("STARBANKR.Models.PagoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CuentaId")
                        .HasColumnType("int")
                        .HasColumnName("cuenta_id");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_pago");

                    b.Property<double>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("monto");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int")
                        .HasColumnName("servicio_id");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.HasIndex("ServicioId");

                    b.ToTable("pago_servicio", (string)null);
                });

            modelBuilder.Entity("STARBANKR.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroReferencia")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numero_referencia");

                    b.HasKey("Id");

                    b.ToTable("servicio", (string)null);
                });

            modelBuilder.Entity("STARBANKR.Models.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CuentaId")
                        .HasColumnType("int")
                        .HasColumnName("cuenta_id");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<double>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("monto");

                    b.Property<string>("TipoOperacion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipoOperacion");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.ToTable("transaccion", (string)null);
                });

            modelBuilder.Entity("STARBANKR.Models.Comprobante", b =>
                {
                    b.HasOne("STARBANKR.Models.Transaccion", "Transaccion")
                        .WithMany()
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("STARBANKR.Models.PagoServicio", b =>
                {
                    b.HasOne("STARBANKR.Models.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STARBANKR.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("STARBANKR.Models.Transaccion", b =>
                {
                    b.HasOne("STARBANKR.Models.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });
#pragma warning restore 612, 618
        }
    }
}
